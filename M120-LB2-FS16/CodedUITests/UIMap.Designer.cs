// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom Coded UI-Test-Generator generiert.
//      Version: 14.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      Coded UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Einsatz_Erstellen - Verwenden Sie "Einsatz_ErstellenParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void Einsatz_Erstellen()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UIM120LB2FS16ListItem.UINameEdit;
            WpfButton uINeuButton = this.UIMainWindowWindow.UINeuButton;
            WpfDatePicker uIDatumDatePicker = this.UIEinzelAnsichtWindow.UIDatumDatePicker;
            WpfEdit uIStart_zeitEdit = this.UIEinzelAnsichtWindow.UIStart_zeitEdit;
            WpfEdit uIEnd_zeitEdit = this.UIEinzelAnsichtWindow.UIEnd_zeitEdit;
            WpfButton uISpeichernButton = this.UIEinzelAnsichtWindow.UISpeichernButton;
            #endregion

            // Klicken "Name" Textfeld
            Mouse.Click(uINameEdit, new Point(83, 7));

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(83, 7));

            // Klicken "Neu" Schaltfläche
            Mouse.Click(uINeuButton, new Point(37, 16));

            // "06-Jun-2016" in "datum" Datumsauswahl auswählen
            uIDatumDatePicker.DateAsString = this.Einsatz_ErstellenParams.UIDatumDatePickerDateAsString;

            // "08:00" in "start_zeit" Textfeld eingeben
            uIStart_zeitEdit.Text = this.Einsatz_ErstellenParams.UIStart_zeitEditText;

            // "{Tab}" in "start_zeit" Textfeld eingeben
            Keyboard.SendKeys(uIStart_zeitEdit, this.Einsatz_ErstellenParams.UIStart_zeitEditSendKeys, ModifierKeys.None);

            // "15:00" in "end_zeit" Textfeld eingeben
            uIEnd_zeitEdit.Text = this.Einsatz_ErstellenParams.UIEnd_zeitEditText;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(38, 2));
        }
        
        #region Properties
        public virtual Einsatz_ErstellenParams Einsatz_ErstellenParams
        {
            get
            {
                if ((this.mEinsatz_ErstellenParams == null))
                {
                    this.mEinsatz_ErstellenParams = new Einsatz_ErstellenParams();
                }
                return this.mEinsatz_ErstellenParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIEinzelAnsichtWindow UIEinzelAnsichtWindow
        {
            get
            {
                if ((this.mUIEinzelAnsichtWindow == null))
                {
                    this.mUIEinzelAnsichtWindow = new UIEinzelAnsichtWindow();
                }
                return this.mUIEinzelAnsichtWindow;
            }
        }
        #endregion
        
        #region Fields
        private Einsatz_ErstellenParams mEinsatz_ErstellenParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIEinzelAnsichtWindow mUIEinzelAnsichtWindow;
        #endregion
    }
    
    /// <summary>
    /// An "Einsatz_Erstellen" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class Einsatz_ErstellenParams
    {
        
        #region Fields
        /// <summary>
        /// "06-Jun-2016" in "datum" Datumsauswahl auswählen
        /// </summary>
        public string UIDatumDatePickerDateAsString = "06-Jun-2016";
        
        /// <summary>
        /// "08:00" in "start_zeit" Textfeld eingeben
        /// </summary>
        public string UIStart_zeitEditText = "08:00";
        
        /// <summary>
        /// "{Tab}" in "start_zeit" Textfeld eingeben
        /// </summary>
        public string UIStart_zeitEditSendKeys = "{Tab}";
        
        /// <summary>
        /// "15:00" in "end_zeit" Textfeld eingeben
        /// </summary>
        public string UIEnd_zeitEditText = "15:00";
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIM120LB2FS16ListItem UIM120LB2FS16ListItem
        {
            get
            {
                if ((this.mUIM120LB2FS16ListItem == null))
                {
                    this.mUIM120LB2FS16ListItem = new UIM120LB2FS16ListItem(this);
                }
                return this.mUIM120LB2FS16ListItem;
            }
        }
        #endregion
        
        #region Fields
        private UIM120LB2FS16ListItem mUIM120LB2FS16ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class UIM120LB2FS16ListItem : WinListItem
    {
        
        public UIM120LB2FS16ListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "M120-LB2-FS16";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UINeuButton
        {
            get
            {
                if ((this.mUINeuButton == null))
                {
                    this.mUINeuButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUINeuButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "einzel_ansicht_neu";
                    this.mUINeuButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUINeuButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUINeuButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "14.0.23107.0")]
    public class UIEinzelAnsichtWindow : WpfWindow
    {
        
        public UIEinzelAnsichtWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "EinzelAnsicht";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("EinzelAnsicht");
            #endregion
        }
        
        #region Properties
        public WpfDatePicker UIDatumDatePicker
        {
            get
            {
                if ((this.mUIDatumDatePicker == null))
                {
                    this.mUIDatumDatePicker = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDatumDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "datum";
                    this.mUIDatumDatePicker.WindowTitles.Add("EinzelAnsicht");
                    #endregion
                }
                return this.mUIDatumDatePicker;
            }
        }
        
        public WpfEdit UIStart_zeitEdit
        {
            get
            {
                if ((this.mUIStart_zeitEdit == null))
                {
                    this.mUIStart_zeitEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIStart_zeitEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "start_zeit";
                    this.mUIStart_zeitEdit.WindowTitles.Add("EinzelAnsicht");
                    #endregion
                }
                return this.mUIStart_zeitEdit;
            }
        }
        
        public WpfEdit UIEnd_zeitEdit
        {
            get
            {
                if ((this.mUIEnd_zeitEdit == null))
                {
                    this.mUIEnd_zeitEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIEnd_zeitEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "end_zeit";
                    this.mUIEnd_zeitEdit.WindowTitles.Add("EinzelAnsicht");
                    #endregion
                }
                return this.mUIEnd_zeitEdit;
            }
        }
        
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "speichern";
                    this.mUISpeichernButton.WindowTitles.Add("EinzelAnsicht");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfDatePicker mUIDatumDatePicker;
        
        private WpfEdit mUIStart_zeitEdit;
        
        private WpfEdit mUIEnd_zeitEdit;
        
        private WpfButton mUISpeichernButton;
        #endregion
    }
}
